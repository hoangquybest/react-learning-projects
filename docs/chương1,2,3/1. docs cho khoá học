1. Cài đặt vscode extensions
- Auto Rename Tag

- Babel Javascript

- Bookmarks

- DotENV

- ESLint

- Javascript (ES6) code snippets

- ES7 React/Redux/GraphQL/React-Native snippets

- Prettier

- Reactjs code snippets

- Tailwind CSS Intellisense

- Turbo Console Log

- Visual Studio IntelliCode

- styled-components-snippets

- vscoded-styled-components

**************************

2. Extensions cho chrome
- react dev tools 
- redux dev tools
- visBug

**************************

3. toolchain - create-react-app

**************************

4. Phím tắt khi đã cài extension ES7 + react/redux

Chỉ cần gõ rsc => nó sẽ cung cấp snippet code

5. npm create vite@latest tạo ra một dự án mới sử dụng công cụ Vite, trong khi npx create-react-app tạo ra một dự án mới sử dụng công cụ create-react-app cho các dự án React.

*************************


6. Tạo dự án với công cụ vite

	npm create vite@latest

a. Project name: quy-hotel
	package name: quy-hotel

b. Select a framework
	React

c. Select a variant: Javascript


***********************

7. JSX là gì

- Javascript xml: Nó là một định dạng cho phép chúng ta viết html trong react, tức là khi chúng ta viết các html trong react, thì nó sẽ convert các thẻ div này, header rồi class này sang dưới dạng react elements. React khuyến khích viết jsx vì nó dễ đọc, dễ maintain thay vì sử dụng react element (vd: React.createElement('div', {id: 'root'}, 'Hello world')). 
- ES6

- Babel: gíup compile (biên dịch) code sang ES5 để hỗ trợ những trình duyệt cũ. 

8. 
- Sử dụng curly braces {} để truyền biến hoặc function
- ternary operator
- dấu backtick


***********************
9. Component là gì?

- Cho phép chia nhỏ giao diện ra thành nhiều thành phần vd footer, header, banner,... tính tái sử dụng cao, dễ quản lý.

- Functional component & class component

**********************

10. Props là gì?

a. Parent component và children component: 
b. Props (Properties): là thuộc tính hoặc là attribute. 

*********************

11. Dấu thường sử dụng ||

Ex: {props.title || 'This is the default title'}

=> Nếu ko có title thì hiện theo ở bên phải

*********************

12. 2 cách viết style

a. Sử dụng inline
- convention: sử dụng camel case
- Sử dụng 2 dấu ngoặc nhọn, style={{}}. {myStyles} là một biểu thức JavaScript được nhúng vào JSX, và style={} là cách JSX hiểu rằng nó nên sử dụng một đối tượng JavaScript (`myStyles`) làm thuộc tính style của phần tử div.
- vd: 
const MyComponent = () => {
  const myStyles = {
    backgroundColor: 'blue',
    color: 'white',
    fontSize: '20px'
  };

  return (
    <div style={myStyles}>
      Hello, World!
    </div>
  );
};
- ko khuyến khích

b. Sử dụng class

- reset css: nhấn 

*******************************
EMMET

Sử dụng emmet để đẩy nhanh tốc độ code html
https://stackoverflow.com/questions/39320393/jsx-or-html-autocompletion-in-visual-studio-code

"emmet.syntaxProfiles": {
    "javascript": "jsx"
  },
  "emmet.triggerExpansionOnTab": true,
  "emmet.includeLanguages": {
    "javascript": "javascriptreact"
  }


*******************************

Format code:
Mac: Shift + Option + F
Windows: Shift + Alt + F

*******************************








